{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///react-mic-safari.min.js","webpack:///webpack/bootstrap 8676a2cab22c619811c2","webpack:///./src/libs/AudioContext.js","webpack:///./~/audio-recorder-polyfill/index.js","webpack:///./~/audio-recorder-polyfill/wave-encoder.js","webpack:///./src/components/ReactMic.js","webpack:///./src/libs/AudioPlayer.js","webpack:///./src/libs/MicrophoneRecorder.js","webpack:///./src/libs/Visualizer.js","webpack:///./~/fbjs/lib/emptyFunction.js","webpack:///./~/fbjs/lib/invariant.js","webpack:///./~/prop-types/factoryWithThrowingShims.js","webpack:///./~/prop-types/index.js","webpack:///./~/prop-types/lib/ReactPropTypesSecret.js","webpack:///external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"}"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_13__","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","audioCtx","window","AudioContext","webkitAudioContext","analyser","createAnalyser","getAudioContext","getAnalyser","resetAnalyser","decodeAudioData","audioData","then","decodedData","__WEBPACK_IMPORTED_MODULE_0__components_ReactMic__","createWorker","fn","js","toString","replace","blob","Blob","Worker","URL","createObjectURL","error","method","event","Event","data","Error","MediaRecorder","stream","state","em","document","createDocumentFragment","encoder","recorder","addEventListener","e","type","mimeType","dispatchEvent","context","processor","start","timeslice","clone","input","createMediaStreamSource","createScriptProcessor","onaudioprocess","postMessage","inputBuffer","getChannelData","connect","destination","slicing","setInterval","requestData","stop","getTracks","forEach","track","clearInterval","pause","resume","sampleRate","apply","arguments","removeEventListener","isTypeSupported","test","notSupported","navigator","mediaDevices","encode","buffer","length","Uint8Array","BYTES_PER_SAMPLE","index","sample","recorded","push","dump","bufferLength","wav","view","DataView","setUint32","setUint16","set","onmessage","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","writable","setPrototypeOf","__proto__","__WEBPACK_IMPORTED_MODULE_0_react__","__WEBPACK_IMPORTED_MODULE_0_react___default","__WEBPACK_IMPORTED_MODULE_1_prop_types__","__WEBPACK_IMPORTED_MODULE_2__libs_MicrophoneRecorder__","__WEBPACK_IMPORTED_MODULE_4__libs_AudioPlayer__","__WEBPACK_IMPORTED_MODULE_5__libs_Visualizer__","ReactMic","_Component","props","_this","visualize","_this$props","backgroundColor","strokeColor","width","height","visualSetting","_this$state","canvas","canvasCtx","visualizeSineWave","visualizeFrequencyBars","visualizeFrequencyCircles","microphoneRecorder","componentDidMount","_this2","_props","onSave","onStop","onStart","onData","audioElem","audioBitsPerSecond","visualizer","refs","getContext","options","setState","clear","_props2","clearRect","render","_props3","record","_state","startRecording","stopRecording","a","createElement","ref","className","defaultProps","__WEBPACK_IMPORTED_MODULE_0__AudioContext__","audioSource","AudioPlayer","undefined","source","createMediaElementSource","MicrophoneRecorder","mediaRecorder","safariMediaRecorder","chunks","startTime","mediaOptions","onStartCallback","onStopCallback","onSaveCallback","onDataCallback","constraints","audio","video","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","Date","now","console","log","str","ondataavailable","onstop","alert","getAudioTracks","evt","blobObject","stopTime","blobURL","open","drawVisual","Visualizer","draw","requestAnimationFrame","getByteTimeDomainData","dataArray","fillStyle","fillRect","lineWidth","strokeStyle","beginPath","sliceWidth","x","v","y","moveTo","lineTo","stroke","fftSize","getByteFrequencyData","barWidth","barHeight","hexToRgb","frequencyBinCount","reductionAmount","reducedDataArray","sum","j","arc","Math","min","PI","fill","stepSize","normalized","r","hex","result","exec","parseInt","g","b","makeEmptyFunction","arg","emptyFunction","thatReturns","thatReturnsFalse","thatReturnsTrue","thatReturnsNull","thatReturnsThis","thatReturnsArgument","invariant","condition","format","f","validateFormat","args","argIndex","framesToPop","ReactPropTypesSecret","shim","propName","componentName","location","propFullName","secret","getShim","isRequired","ReactPropTypes","array","bool","func","number","string","symbol","any","arrayOf","element","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes"],"mappings":"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","file":"react-mic-safari.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"react-mic\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"react-mic\"] = factory(root[\"React\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_13__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"react-mic\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"react-mic\"] = factory(root[\"React\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_13__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 14);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar audioCtx = new (window.AudioContext || window.webkitAudioContext)();\nvar analyser = audioCtx.createAnalyser();\n\nvar AudioContext = {\n  getAudioContext: function getAudioContext() {\n    return audioCtx;\n  },\n  getAnalyser: function getAnalyser() {\n    return analyser;\n  },\n  resetAnalyser: function resetAnalyser() {\n    analyser = audioCtx.createAnalyser();\n  },\n  decodeAudioData: function decodeAudioData() {\n    audioCtx.decodeAudioData(audioData).then(function (decodedData) {\n      // use the decoded data here\n    });\n  }\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = AudioContext;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__components_ReactMic__ = __webpack_require__(4);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"ReactMic\", function() { return __WEBPACK_IMPORTED_MODULE_0__components_ReactMic__[\"a\"]; });\n\n\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar AudioContext = window.AudioContext || window.webkitAudioContext\n\nfunction createWorker (fn) {\n  var js = fn\n    .toString()\n    .replace(/^function\\s*\\(\\)\\s*{/, '')\n    .replace(/}$/, '')\n  var blob = new Blob([js])\n  return new Worker(URL.createObjectURL(blob))\n}\n\nfunction error (method) {\n  var event = new Event('error')\n  event.data = new Error('Wrong state for ' + method)\n  return event\n}\n\nvar context, processor\n\n/**\n * Audio Recorder with MediaRecorder API.\n *\n * @param {MediaStream} stream The audio stream to record.\n *\n * @example\n * navigator.mediaDevices.getUserMedia({ audio: true }).then(function (stream) {\n *   var recorder = new MediaRecorder(stream)\n * })\n *\n * @class\n */\nfunction MediaRecorder (stream) {\n  /**\n   * The `MediaStream` passed into the constructor.\n   * @type {MediaStream}\n   */\n  this.stream = stream\n\n  /**\n   * The current state of recording process.\n   * @type {\"inactive\"|\"recording\"|\"paused\"}\n   */\n  this.state = 'inactive'\n\n  this.em = document.createDocumentFragment()\n  this.encoder = createWorker(MediaRecorder.encoder)\n\n  var recorder = this\n  this.encoder.addEventListener('message', function (e) {\n    var event = new Event('dataavailable')\n    event.data = new Blob([e.data], { type: recorder.mimeType })\n    recorder.em.dispatchEvent(event)\n    if (recorder.state === 'inactive') {\n      recorder.em.dispatchEvent(new Event('stop'))\n    }\n  })\n}\n\nMediaRecorder.prototype = {\n  /**\n   * The MIME type that is being used for recording.\n   * @type {string}\n   */\n  mimeType: 'audio/wav',\n\n  /**\n   * Begins recording media.\n   *\n   * @param {number} [timeslice] The milliseconds to record into each `Blob`.\n   *                             If this parameter isn’t included, single `Blob`\n   *                             will be recorded.\n   *\n   * @return {undefined}\n   *\n   * @example\n   * recordButton.addEventListener('click', function () {\n   *   recorder.start()\n   * })\n   */\n  start: function start (timeslice) {\n    /**\n      Create a clone of stream and start recording\n    */\n    if (this.state !== 'inactive') {\n      return this.em.dispatchEvent(error('start'))\n    }\n\n    this.state = 'recording'\n\n    if (!context) {\n      context = new AudioContext()\n    }\n    this.clone = this.stream.clone()\n    var input = context.createMediaStreamSource(this.clone)\n    processor = context.createScriptProcessor(2048, 1, 1)\n\n    var recorder = this\n    processor.onaudioprocess = function (e) {\n      if (recorder.state === 'recording') {\n        recorder.encoder.postMessage([\n          'encode', e.inputBuffer.getChannelData(0)\n        ])\n      }\n    }\n\n    input.connect(processor)\n    processor.connect(context.destination)\n\n    this.em.dispatchEvent(new Event('start'))\n\n    if (timeslice) {\n      this.slicing = setInterval(function () {\n        if (recorder.state === 'recording') recorder.requestData()\n      }, timeslice)\n    }\n\n    return undefined\n  },\n\n  /**\n   * Stop media capture and raise `dataavailable` event with recorded data.\n   *\n   * @return {undefined}\n   *\n   * @example\n   * finishButton.addEventListener('click', function () {\n   *   recorder.stop()\n   * })\n   */\n  stop: function stop () {\n    /**\n      Stop stream and end cloned stream tracks\n    */\n    if (this.state === 'inactive') {\n      return this.em.dispatchEvent(error('stop'))\n    }\n\n    this.requestData()\n    this.state = 'inactive'\n    this.clone.getTracks().forEach(function (track) {\n      track.stop()\n    })\n    return clearInterval(this.slicing)\n  },\n\n  /**\n   * Pauses recording of media streams.\n   *\n   * @return {undefined}\n   *\n   * @example\n   * pauseButton.addEventListener('click', function () {\n   *   recorder.pause()\n   * })\n   */\n  pause: function pause () {\n    if (this.state !== 'recording') {\n      return this.em.dispatchEvent(error('pause'))\n    }\n\n    this.state = 'paused'\n    return this.em.dispatchEvent(new Event('pause'))\n  },\n\n  /**\n   * Resumes media recording when it has been previously paused.\n   *\n   * @return {undefined}\n   *\n   * @example\n   * resumeButton.addEventListener('click', function () {\n   *   recorder.resume()\n   * })\n   */\n  resume: function resume () {\n    if (this.state !== 'paused') {\n      return this.em.dispatchEvent(error('resume'))\n    }\n\n    this.state = 'recording'\n    return this.em.dispatchEvent(new Event('resume'))\n  },\n\n  /**\n   * Raise a `dataavailable` event containing the captured media.\n   *\n   * @return {undefined}\n   *\n   * @example\n   * this.on('nextData', function () {\n   *   recorder.requestData()\n   * })\n   */\n  requestData: function requestData () {\n    if (this.state === 'inactive') {\n      return this.em.dispatchEvent(error('requestData'))\n    }\n\n    return this.encoder.postMessage(['dump', context.sampleRate])\n  },\n\n  /**\n   * Add listener for specified event type.\n   *\n   * @param {\"start\"|\"stop\"|\"pause\"|\"resume\"|\"dataavailable\"|\"error\"}\n   * type Event type.\n   * @param {function} listener The listener function.\n   *\n   * @return {undefined}\n   *\n   * @example\n   * recorder.addEventListener('dataavailable', function (e) {\n   *   audio.src = URL.createObjectURL(e.data)\n   * })\n   */\n  addEventListener: function addEventListener () {\n    this.em.addEventListener.apply(this.em, arguments)\n  },\n\n  /**\n   * Remove event listener.\n   *\n   * @param {\"start\"|\"stop\"|\"pause\"|\"resume\"|\"dataavailable\"|\"error\"}\n   * type Event type.\n   * @param {function} listener The same function used in `addEventListener`.\n   *\n   * @return {undefined}\n   */\n  removeEventListener: function removeEventListener () {\n    this.em.removeEventListener.apply(this.em, arguments)\n  },\n\n  /**\n   * Calls each of the listeners registered for a given event.\n   *\n   * @param {Event} event The event object.\n   *\n   * @return {boolean} Is event was no canceled by any listener.\n   */\n  dispatchEvent: function dispatchEvent () {\n    this.em.dispatchEvent.apply(this.em, arguments)\n  }\n}\n\n/**\n * Returns `true` if the MIME type specified is one the polyfill can record.\n *\n * This polyfill supports only `audio/wav`.\n *\n * @param {string} mimeType The mimeType to check.\n *\n * @return {boolean} `true` on `audio/wav` MIME type.\n */\nMediaRecorder.isTypeSupported = function isTypeSupported (mimeType) {\n  return /audio\\/wave?/.test(mimeType)\n}\n\n/**\n * `true` if MediaRecorder can not be polyfilled in the current browser.\n * @type {boolean}\n *\n * @example\n * if (MediaRecorder.notSupported) {\n *   showWarning('Audio recording is not supported in this browser')\n * }\n */\nMediaRecorder.notSupported = !navigator.mediaDevices || !AudioContext\n\n/**\n * Converts RAW audio buffer to compressed audio files.\n * It will be loaded to Web Worker.\n * By default, WAVE encoder will be used.\n * @type {function}\n *\n * @example\n * MediaRecorder.prototype.mimeType = 'audio/ogg'\n * MediaRecorder.encoder = oggEncoder\n */\nMediaRecorder.encoder = __webpack_require__(3)\n\nmodule.exports = MediaRecorder\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\n// Copied from https://github.com/chris-rudmin/Recorderjs\n\nmodule.exports = function () {\n  var BYTES_PER_SAMPLE = 2\n\n  var recorded = []\n\n  function encode (buffer) {\n    var length = buffer.length\n    var data = new Uint8Array(length * BYTES_PER_SAMPLE)\n    for (var i = 0; i < length; i++) {\n      var index = i * BYTES_PER_SAMPLE\n      var sample = buffer[i]\n      if (sample > 1) {\n        sample = 1\n      } else if (sample < -1) {\n        sample = -1\n      }\n      sample = sample * 32768\n      data[index] = sample\n      data[index + 1] = sample >> 8\n    }\n    recorded.push(data)\n  }\n\n  function dump (sampleRate) {\n    var bufferLength = recorded.length ? recorded[0].length : 0\n    var length = recorded.length * bufferLength\n    var wav = new Uint8Array(44 + length)\n    var view = new DataView(wav.buffer)\n\n    // RIFF identifier 'RIFF'\n    view.setUint32(0, 1380533830, false)\n    // file length minus RIFF identifier length and file description length\n    view.setUint32(4, 36 + length, true)\n    // RIFF type 'WAVE'\n    view.setUint32(8, 1463899717, false)\n    // format chunk identifier 'fmt '\n    view.setUint32(12, 1718449184, false)\n    // format chunk length\n    view.setUint32(16, 16, true)\n    // sample format (raw)\n    view.setUint16(20, 1, true)\n    // channel count\n    view.setUint16(22, 1, true)\n    // sample rate\n    view.setUint32(24, sampleRate, true)\n    // byte rate (sample rate * block align)\n    view.setUint32(28, sampleRate * BYTES_PER_SAMPLE, true)\n    // block align (channel count * bytes per sample)\n    view.setUint16(32, BYTES_PER_SAMPLE, true)\n    // bits per sample\n    view.setUint16(34, 8 * BYTES_PER_SAMPLE, true)\n    // data chunk identifier 'data'\n    view.setUint32(36, 1684108385, false)\n    // data chunk length\n    view.setUint32(40, length, true)\n\n    for (var i = 0; i < recorded.length; i++) {\n      wav.set(recorded[i], i * bufferLength + 44)\n    }\n\n    recorded = []\n    postMessage(wav.buffer, [wav.buffer])\n  }\n\n  onmessage = function (e) {\n    if (e.data[0] === 'encode') {\n      encode(e.data[1])\n    } else {\n      dump(e.data[1])\n    }\n  }\n}\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(13);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_prop_types__ = __webpack_require__(11);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_prop_types__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__libs_MicrophoneRecorder__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__libs_AudioContext__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__libs_AudioPlayer__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__libs_Visualizer__ = __webpack_require__(7);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return ReactMic; });\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n// cool blog article on how to do this: http://www.smartjava.org/content/exploring-html5-web-audio-visualizing-sound\n// https://developer.mozilla.org/en-US/docs/Web/API/Web_Audio_API/Visualizations_with_Web_Audio_API\n\n// distortion curve for the waveshaper, thanks to Kevin Ennis\n// http://stackoverflow.com/questions/22312841/waveshaper-node-in-webaudio-how-to-emulate-distortion\n\n\n\n\n\n\n\n\nvar ReactMic = function (_Component) {\n  _inherits(ReactMic, _Component);\n\n  function ReactMic(props) {\n    _classCallCheck(this, ReactMic);\n\n    var _this = _possibleConstructorReturn(this, _Component.call(this, props));\n\n    _this.visualize = function () {\n      var self = _this;\n      var _this$props = _this.props,\n          backgroundColor = _this$props.backgroundColor,\n          strokeColor = _this$props.strokeColor,\n          width = _this$props.width,\n          height = _this$props.height,\n          visualSetting = _this$props.visualSetting;\n      var _this$state = _this.state,\n          canvas = _this$state.canvas,\n          canvasCtx = _this$state.canvasCtx;\n\n\n      if (visualSetting === 'sinewave') {\n        __WEBPACK_IMPORTED_MODULE_5__libs_Visualizer__[\"a\" /* default */].visualizeSineWave(canvasCtx, canvas, width, height, backgroundColor, strokeColor);\n      } else if (visualSetting === 'frequencyBars') {\n        __WEBPACK_IMPORTED_MODULE_5__libs_Visualizer__[\"a\" /* default */].visualizeFrequencyBars(canvasCtx, canvas, width, height, backgroundColor, strokeColor);\n      } else if (visualSetting === 'frequencyCircles') {\n        __WEBPACK_IMPORTED_MODULE_5__libs_Visualizer__[\"a\" /* default */].visualizeFrequencyCircles(canvasCtx, canvas, width, height, backgroundColor, strokeColor);\n      }\n    };\n\n    _this.state = {\n      microphoneRecorder: null,\n      canvas: null,\n      canvasCtx: null\n    };\n    return _this;\n  }\n\n  ReactMic.prototype.componentDidMount = function componentDidMount() {\n    var _this2 = this;\n\n    var _props = this.props,\n        onSave = _props.onSave,\n        onStop = _props.onStop,\n        onStart = _props.onStart,\n        onData = _props.onData,\n        audioElem = _props.audioElem,\n        audioBitsPerSecond = _props.audioBitsPerSecond,\n        mimeType = _props.mimeType;\n    var visualizer = this.refs.visualizer;\n\n    var canvas = visualizer;\n    var canvasCtx = canvas.getContext(\"2d\");\n    var options = {\n      audioBitsPerSecond: audioBitsPerSecond,\n      mimeType: mimeType\n    };\n\n    if (audioElem) {\n      __WEBPACK_IMPORTED_MODULE_4__libs_AudioPlayer__[\"a\" /* default */].create(audioElem);\n\n      this.setState({\n        canvas: canvas,\n        canvasCtx: canvasCtx\n      }, function () {\n        _this2.visualize();\n      });\n    } else {\n\n      this.setState({\n        microphoneRecorder: new __WEBPACK_IMPORTED_MODULE_2__libs_MicrophoneRecorder__[\"a\" /* MicrophoneRecorder */](onStart, onStop, onSave, onData, options),\n        canvas: canvas,\n        canvasCtx: canvasCtx\n      }, function () {\n        _this2.visualize();\n      });\n    }\n  };\n\n  ReactMic.prototype.clear = function clear() {\n    var _props2 = this.props,\n        width = _props2.width,\n        height = _props2.height;\n    var canvasCtx = this.state.canvasCtx;\n\n    canvasCtx.clearRect(0, 0, width, height);\n  };\n\n  ReactMic.prototype.render = function render() {\n    var _props3 = this.props,\n        record = _props3.record,\n        onStop = _props3.onStop,\n        width = _props3.width,\n        height = _props3.height;\n    var _state = this.state,\n        microphoneRecorder = _state.microphoneRecorder,\n        canvasCtx = _state.canvasCtx;\n\n\n    if (record) {\n      if (microphoneRecorder) {\n        microphoneRecorder.startRecording();\n      }\n    } else {\n      if (microphoneRecorder) {\n        microphoneRecorder.stopRecording(onStop);\n        this.clear();\n      }\n    }\n\n    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('canvas', { ref: 'visualizer', height: height, width: width, className: this.props.className });\n  };\n\n  return ReactMic;\n}(__WEBPACK_IMPORTED_MODULE_0_react__[\"Component\"]);\n\n\n\n\nReactMic.defaultProps = {\n  backgroundColor: 'rgba(255, 255, 255, 0.5)',\n  strokeColor: '#000000',\n  className: 'visualizer',\n  audioBitsPerSecond: 128000,\n  mimeType: 'audio/wav',\n  record: false,\n  width: 640,\n  height: 100,\n  visualSetting: 'sinewave'\n};\n\n/***/ }),\n/* 5 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__AudioContext__ = __webpack_require__(0);\n\n\nvar audioSource = void 0;\n\nvar AudioPlayer = {\n  create: function create(audioElem) {\n    var audioCtx = __WEBPACK_IMPORTED_MODULE_0__AudioContext__[\"a\" /* default */].getAudioContext();\n    var analyser = __WEBPACK_IMPORTED_MODULE_0__AudioContext__[\"a\" /* default */].getAnalyser();\n\n    if (audioSource === undefined) {\n      var source = audioCtx.createMediaElementSource(audioElem);\n      source.connect(analyser);\n      audioSource = source;\n    }\n\n    analyser.connect(audioCtx.destination);\n  }\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = AudioPlayer;\n\n/***/ }),\n/* 6 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__AudioContext__ = __webpack_require__(0);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return MicrophoneRecorder; });\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\n\nvar analyser = void 0;\nvar audioCtx = void 0;\nvar mediaRecorder = void 0;\nvar safariMediaRecorder = __webpack_require__(2);\nvar chunks = [];\nvar startTime = void 0;\nvar stream = void 0;\nvar mediaOptions = void 0;\nvar blobObject = void 0;\nvar onStartCallback = void 0;\nvar onStopCallback = void 0;\nvar onSaveCallback = void 0;\nvar onDataCallback = void 0;\n\nvar constraints = { audio: true, video: false }; // constraints - only audio needed\n\nnavigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia;\n\nvar MicrophoneRecorder = function () {\n  function MicrophoneRecorder(onStart, onStop, onSave, onData, options) {\n    var _this = this;\n\n    _classCallCheck(this, MicrophoneRecorder);\n\n    this.startRecording = function () {\n\n      startTime = Date.now();\n\n      if (mediaRecorder) {\n\n        if (audioCtx && audioCtx.state === 'suspended') {\n          audioCtx.resume();\n        }\n\n        if (mediaRecorder && mediaRecorder.state === 'paused') {\n          mediaRecorder.resume();\n          return;\n        }\n\n        if (audioCtx && mediaRecorder && mediaRecorder.state === 'inactive') {\n          mediaRecorder.start(10);\n          var source = audioCtx.createMediaStreamSource(stream);\n          source.connect(analyser);\n          if (onStartCallback) {\n            onStartCallback();\n          };\n        }\n      } else {\n        if (navigator.mediaDevices) {\n          console.log('getUserMedia supported.');\n\n          navigator.mediaDevices.getUserMedia(constraints).then(function (str) {\n            stream = str;\n\n            console.log('Passed mediaOptions.mimeType: ' + mediaOptions.mimeType);\n\n            if (!!window.MediaRecorder && window.MediaRecorder.isTypeSupported(mediaOptions.mimeType)) {\n              console.log('Creating Standard MediaRecorder with Passed MediaOptions from Component Props');\n              mediaRecorder = new window.MediaRecorder(str, mediaOptions);\n              mediaRecorder.ondataavailable = function (event) {\n                chunks.push(event.data);\n                if (onDataCallback) {\n                  onDataCallback(event.data);\n                }\n              };\n              mediaRecorder.onstop = _this.onStop;\n            } else if (!!window.MediaRecorder) {\n              console.log('Creating Standard MediaRecorder, No Passed MediaOptions');\n              mediaRecorder = new window.MediaRecorder(str);\n              mediaRecorder.ondataavailable = function (event) {\n                chunks.push(event.data);\n                if (onDataCallback) {\n                  onDataCallback(event.data);\n                }\n              };\n              mediaRecorder.onstop = _this.onStop;\n            } else {\n              console.log('Creating Polyfill MediaRecorder for Safari, No Passed MediaOptions');\n              mediaRecorder = new safariMediaRecorder(str);\n              mediaRecorder.addEventListener('dataavailable', function (event) {\n                chunks.push(event.data);\n                if (onDataCallback) {\n                  onDataCallback(event.data);\n                }\n              });\n\n              mediaRecorder.addEventListener('stop', function (event) {\n                _this.onStop(event);\n              });\n            }\n\n            if (onStartCallback) {\n              onStartCallback();\n            };\n\n            audioCtx = __WEBPACK_IMPORTED_MODULE_0__AudioContext__[\"a\" /* default */].getAudioContext();\n            audioCtx.resume().then(function () {\n\n              analyser = __WEBPACK_IMPORTED_MODULE_0__AudioContext__[\"a\" /* default */].getAnalyser();\n              mediaRecorder.start(10);\n              var sourceNode = audioCtx.createMediaStreamSource(stream);\n              sourceNode.connect(analyser);\n            });\n          });\n        } else {\n          alert('Your browser does not support audio recording');\n        }\n      }\n    };\n\n    onStartCallback = onStart;\n    onStopCallback = onStop;\n    onSaveCallback = onSave;\n    onDataCallback = onData;\n    mediaOptions = options;\n  }\n\n  MicrophoneRecorder.prototype.stopRecording = function stopRecording() {\n    if (mediaRecorder && mediaRecorder.state !== 'inactive') {\n      mediaRecorder.stop();\n\n      stream.getAudioTracks().forEach(function (track) {\n        track.stop();\n      });\n      mediaRecorder = null;\n      __WEBPACK_IMPORTED_MODULE_0__AudioContext__[\"a\" /* default */].resetAnalyser();\n    }\n  };\n\n  MicrophoneRecorder.prototype.onStop = function onStop(evt) {\n    console.log(chunks);\n    var blob = new Blob(chunks, { 'type': mediaOptions.mimeType });\n    chunks = [];\n\n    var blobObject = {\n      blob: blob,\n      startTime: startTime,\n      stopTime: Date.now(),\n      options: mediaOptions,\n      blobURL: window.URL.createObjectURL(blob)\n    };\n\n    window.open(blobObject.blobURL, '_self');\n\n    if (onStopCallback) {\n      onStopCallback(blobObject);\n    };\n    if (onSaveCallback) {\n      onSaveCallback(blobObject);\n    };\n  };\n\n  return MicrophoneRecorder;\n}();\n\n/***/ }),\n/* 7 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__AudioContext__ = __webpack_require__(0);\n\n\nvar drawVisual = void 0;\n\nvar Visualizer = {\n  visualizeSineWave: function visualizeSineWave(canvasCtx, canvas, width, height, backgroundColor, strokeColor) {\n    var analyser = __WEBPACK_IMPORTED_MODULE_0__AudioContext__[\"a\" /* default */].getAnalyser();\n\n    var bufferLength = analyser.fftSize;\n    var dataArray = new Uint8Array(bufferLength);\n\n    canvasCtx.clearRect(0, 0, width, height);\n\n    function draw() {\n\n      drawVisual = requestAnimationFrame(draw);\n\n      analyser = __WEBPACK_IMPORTED_MODULE_0__AudioContext__[\"a\" /* default */].getAnalyser();\n\n      analyser.getByteTimeDomainData(dataArray);\n\n      canvasCtx.fillStyle = backgroundColor;\n      canvasCtx.fillRect(0, 0, width, height);\n\n      canvasCtx.lineWidth = 2;\n      canvasCtx.strokeStyle = strokeColor;\n\n      canvasCtx.beginPath();\n\n      var sliceWidth = width * 1.0 / bufferLength;\n      var x = 0;\n\n      for (var i = 0; i < bufferLength; i++) {\n        var v = dataArray[i] / 128.0;\n        var y = v * height / 2;\n\n        if (i === 0) {\n          canvasCtx.moveTo(x, y);\n        } else {\n          canvasCtx.lineTo(x, y);\n        }\n\n        x += sliceWidth;\n      }\n\n      canvasCtx.lineTo(canvas.width, canvas.height / 2);\n      canvasCtx.stroke();\n    };\n\n    draw();\n  },\n  visualizeFrequencyBars: function visualizeFrequencyBars(canvasCtx, canvas, width, height, backgroundColor, strokeColor) {\n    var self = this;\n    var analyser = __WEBPACK_IMPORTED_MODULE_0__AudioContext__[\"a\" /* default */].getAnalyser();\n    analyser.fftSize = 256;\n    var bufferLength = analyser.frequencyBinCount;\n    var dataArray = new Uint8Array(bufferLength);\n\n    canvasCtx.clearRect(0, 0, width, height);\n\n    function draw() {\n      drawVisual = requestAnimationFrame(draw);\n\n      analyser = __WEBPACK_IMPORTED_MODULE_0__AudioContext__[\"a\" /* default */].getAnalyser();\n      analyser.getByteFrequencyData(dataArray);\n\n      canvasCtx.fillStyle = backgroundColor;\n      canvasCtx.fillRect(0, 0, width, height);\n\n      var barWidth = width / bufferLength * 2.5;\n      var barHeight = void 0;\n      var x = 0;\n\n      for (var i = 0; i < bufferLength; i++) {\n        barHeight = dataArray[i];\n\n        var rgb = self.hexToRgb(strokeColor);\n\n        // canvasCtx.fillStyle = `rgb(${barHeight+100},${rgb.g},${rgb.b})`;\n        canvasCtx.fillStyle = strokeColor;\n        canvasCtx.fillRect(x, height - barHeight / 2, barWidth, barHeight / 2);\n\n        x += barWidth + 1;\n      }\n    };\n\n    draw();\n  },\n  visualizeFrequencyCircles: function visualizeFrequencyCircles(canvasCtx, canvas, width, height, backgroundColor, strokeColor) {\n    var self = this;\n    var analyser = __WEBPACK_IMPORTED_MODULE_0__AudioContext__[\"a\" /* default */].getAnalyser();\n    analyser.fftSize = 32;\n    var bufferLength = analyser.frequencyBinCount;\n\n    var dataArray = new Uint8Array(bufferLength);\n    canvasCtx.clearRect(0, 0, width, height);\n\n    function draw() {\n\n      drawVisual = requestAnimationFrame(draw);\n      analyser = __WEBPACK_IMPORTED_MODULE_0__AudioContext__[\"a\" /* default */].getAnalyser();\n      analyser.getByteFrequencyData(dataArray);\n      var reductionAmount = 3;\n      var reducedDataArray = new Uint8Array(bufferLength / reductionAmount);\n\n      for (var i = 0; i < bufferLength; i += reductionAmount) {\n        var sum = 0;\n        for (var j = 0; j < reductionAmount; j++) {\n          sum += dataArray[i + j];\n        }\n        reducedDataArray[i / reductionAmount] = sum / reductionAmount;\n      }\n\n      canvasCtx.clearRect(0, 0, width, height);\n      canvasCtx.beginPath();\n      canvasCtx.arc(width / 2, height / 2, Math.min(height, width) / 2, 0, 2 * Math.PI);\n      canvasCtx.fillStyle = backgroundColor;\n      canvasCtx.fill();\n      var stepSize = Math.min(height, width) / 2.0 / reducedDataArray.length;\n      canvasCtx.strokeStyle = strokeColor;\n\n      for (var _i = 0; _i < reducedDataArray.length; _i++) {\n        canvasCtx.beginPath();\n        var normalized = reducedDataArray[_i] / 128;\n        var r = stepSize * _i + stepSize * normalized;\n        canvasCtx.arc(width / 2, height / 2, r, 0, 2 * Math.PI);\n        canvasCtx.stroke();\n      }\n    };\n    draw();\n  },\n  hexToRgb: function hexToRgb(hex) {\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? {\n      r: parseInt(result[1], 16),\n      g: parseInt(result[2], 16),\n      b: parseInt(result[3], 16)\n    } : null;\n  }\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = Visualizer;\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nfunction makeEmptyFunction(arg) {\n  return function () {\n    return arg;\n  };\n}\n\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\nvar emptyFunction = function emptyFunction() {};\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\nemptyFunction.thatReturnsThis = function () {\n  return this;\n};\nemptyFunction.thatReturnsArgument = function (arg) {\n  return arg;\n};\n\nmodule.exports = emptyFunction;\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar validateFormat = function validateFormat(format) {};\n\nif (false) {\n  validateFormat = function validateFormat(format) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  };\n}\n\nfunction invariant(condition, format, a, b, c, d, e, f) {\n  validateFormat(format);\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n}\n\nmodule.exports = invariant;\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nvar emptyFunction = __webpack_require__(8);\nvar invariant = __webpack_require__(9);\nvar ReactPropTypesSecret = __webpack_require__(12);\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    invariant(\n      false,\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim\n  };\n\n  ReactPropTypes.checkPropTypes = emptyFunction;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (false) {\n  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&\n    Symbol.for &&\n    Symbol.for('react.element')) ||\n    0xeac7;\n\n  var isValidElement = function(object) {\n    return typeof object === 'object' &&\n      object !== null &&\n      object.$$typeof === REACT_ELEMENT_TYPE;\n  };\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(isValidElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = __webpack_require__(10)();\n}\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_13__;\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(1);\n\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// react-mic-safari.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 14);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 8676a2cab22c619811c2","const audioCtx = new (window.AudioContext || window.webkitAudioContext)();\nlet analyser = audioCtx.createAnalyser();\n\nconst AudioContext  = {\n\n  getAudioContext() {\n    return audioCtx;\n  },\n\n  getAnalyser() {\n    return analyser;\n  },\n\n  resetAnalyser() {\n    analyser = audioCtx.createAnalyser();\n  },\n\n  decodeAudioData() {\n    audioCtx.decodeAudioData(audioData).then(function(decodedData) {\n      // use the decoded data here\n    });\n  }\n\n}\n\nexport default AudioContext;\n\n\n\n// WEBPACK FOOTER //\n// ./src/libs/AudioContext.js","var AudioContext = window.AudioContext || window.webkitAudioContext\n\nfunction createWorker (fn) {\n  var js = fn\n    .toString()\n    .replace(/^function\\s*\\(\\)\\s*{/, '')\n    .replace(/}$/, '')\n  var blob = new Blob([js])\n  return new Worker(URL.createObjectURL(blob))\n}\n\nfunction error (method) {\n  var event = new Event('error')\n  event.data = new Error('Wrong state for ' + method)\n  return event\n}\n\nvar context, processor\n\n/**\n * Audio Recorder with MediaRecorder API.\n *\n * @param {MediaStream} stream The audio stream to record.\n *\n * @example\n * navigator.mediaDevices.getUserMedia({ audio: true }).then(function (stream) {\n *   var recorder = new MediaRecorder(stream)\n * })\n *\n * @class\n */\nfunction MediaRecorder (stream) {\n  /**\n   * The `MediaStream` passed into the constructor.\n   * @type {MediaStream}\n   */\n  this.stream = stream\n\n  /**\n   * The current state of recording process.\n   * @type {\"inactive\"|\"recording\"|\"paused\"}\n   */\n  this.state = 'inactive'\n\n  this.em = document.createDocumentFragment()\n  this.encoder = createWorker(MediaRecorder.encoder)\n\n  var recorder = this\n  this.encoder.addEventListener('message', function (e) {\n    var event = new Event('dataavailable')\n    event.data = new Blob([e.data], { type: recorder.mimeType })\n    recorder.em.dispatchEvent(event)\n    if (recorder.state === 'inactive') {\n      recorder.em.dispatchEvent(new Event('stop'))\n    }\n  })\n}\n\nMediaRecorder.prototype = {\n  /**\n   * The MIME type that is being used for recording.\n   * @type {string}\n   */\n  mimeType: 'audio/wav',\n\n  /**\n   * Begins recording media.\n   *\n   * @param {number} [timeslice] The milliseconds to record into each `Blob`.\n   *                             If this parameter isn’t included, single `Blob`\n   *                             will be recorded.\n   *\n   * @return {undefined}\n   *\n   * @example\n   * recordButton.addEventListener('click', function () {\n   *   recorder.start()\n   * })\n   */\n  start: function start (timeslice) {\n    /**\n      Create a clone of stream and start recording\n    */\n    if (this.state !== 'inactive') {\n      return this.em.dispatchEvent(error('start'))\n    }\n\n    this.state = 'recording'\n\n    if (!context) {\n      context = new AudioContext()\n    }\n    this.clone = this.stream.clone()\n    var input = context.createMediaStreamSource(this.clone)\n    processor = context.createScriptProcessor(2048, 1, 1)\n\n    var recorder = this\n    processor.onaudioprocess = function (e) {\n      if (recorder.state === 'recording') {\n        recorder.encoder.postMessage([\n          'encode', e.inputBuffer.getChannelData(0)\n        ])\n      }\n    }\n\n    input.connect(processor)\n    processor.connect(context.destination)\n\n    this.em.dispatchEvent(new Event('start'))\n\n    if (timeslice) {\n      this.slicing = setInterval(function () {\n        if (recorder.state === 'recording') recorder.requestData()\n      }, timeslice)\n    }\n\n    return undefined\n  },\n\n  /**\n   * Stop media capture and raise `dataavailable` event with recorded data.\n   *\n   * @return {undefined}\n   *\n   * @example\n   * finishButton.addEventListener('click', function () {\n   *   recorder.stop()\n   * })\n   */\n  stop: function stop () {\n    /**\n      Stop stream and end cloned stream tracks\n    */\n    if (this.state === 'inactive') {\n      return this.em.dispatchEvent(error('stop'))\n    }\n\n    this.requestData()\n    this.state = 'inactive'\n    this.clone.getTracks().forEach(function (track) {\n      track.stop()\n    })\n    return clearInterval(this.slicing)\n  },\n\n  /**\n   * Pauses recording of media streams.\n   *\n   * @return {undefined}\n   *\n   * @example\n   * pauseButton.addEventListener('click', function () {\n   *   recorder.pause()\n   * })\n   */\n  pause: function pause () {\n    if (this.state !== 'recording') {\n      return this.em.dispatchEvent(error('pause'))\n    }\n\n    this.state = 'paused'\n    return this.em.dispatchEvent(new Event('pause'))\n  },\n\n  /**\n   * Resumes media recording when it has been previously paused.\n   *\n   * @return {undefined}\n   *\n   * @example\n   * resumeButton.addEventListener('click', function () {\n   *   recorder.resume()\n   * })\n   */\n  resume: function resume () {\n    if (this.state !== 'paused') {\n      return this.em.dispatchEvent(error('resume'))\n    }\n\n    this.state = 'recording'\n    return this.em.dispatchEvent(new Event('resume'))\n  },\n\n  /**\n   * Raise a `dataavailable` event containing the captured media.\n   *\n   * @return {undefined}\n   *\n   * @example\n   * this.on('nextData', function () {\n   *   recorder.requestData()\n   * })\n   */\n  requestData: function requestData () {\n    if (this.state === 'inactive') {\n      return this.em.dispatchEvent(error('requestData'))\n    }\n\n    return this.encoder.postMessage(['dump', context.sampleRate])\n  },\n\n  /**\n   * Add listener for specified event type.\n   *\n   * @param {\"start\"|\"stop\"|\"pause\"|\"resume\"|\"dataavailable\"|\"error\"}\n   * type Event type.\n   * @param {function} listener The listener function.\n   *\n   * @return {undefined}\n   *\n   * @example\n   * recorder.addEventListener('dataavailable', function (e) {\n   *   audio.src = URL.createObjectURL(e.data)\n   * })\n   */\n  addEventListener: function addEventListener () {\n    this.em.addEventListener.apply(this.em, arguments)\n  },\n\n  /**\n   * Remove event listener.\n   *\n   * @param {\"start\"|\"stop\"|\"pause\"|\"resume\"|\"dataavailable\"|\"error\"}\n   * type Event type.\n   * @param {function} listener The same function used in `addEventListener`.\n   *\n   * @return {undefined}\n   */\n  removeEventListener: function removeEventListener () {\n    this.em.removeEventListener.apply(this.em, arguments)\n  },\n\n  /**\n   * Calls each of the listeners registered for a given event.\n   *\n   * @param {Event} event The event object.\n   *\n   * @return {boolean} Is event was no canceled by any listener.\n   */\n  dispatchEvent: function dispatchEvent () {\n    this.em.dispatchEvent.apply(this.em, arguments)\n  }\n}\n\n/**\n * Returns `true` if the MIME type specified is one the polyfill can record.\n *\n * This polyfill supports only `audio/wav`.\n *\n * @param {string} mimeType The mimeType to check.\n *\n * @return {boolean} `true` on `audio/wav` MIME type.\n */\nMediaRecorder.isTypeSupported = function isTypeSupported (mimeType) {\n  return /audio\\/wave?/.test(mimeType)\n}\n\n/**\n * `true` if MediaRecorder can not be polyfilled in the current browser.\n * @type {boolean}\n *\n * @example\n * if (MediaRecorder.notSupported) {\n *   showWarning('Audio recording is not supported in this browser')\n * }\n */\nMediaRecorder.notSupported = !navigator.mediaDevices || !AudioContext\n\n/**\n * Converts RAW audio buffer to compressed audio files.\n * It will be loaded to Web Worker.\n * By default, WAVE encoder will be used.\n * @type {function}\n *\n * @example\n * MediaRecorder.prototype.mimeType = 'audio/ogg'\n * MediaRecorder.encoder = oggEncoder\n */\nMediaRecorder.encoder = require('./wave-encoder')\n\nmodule.exports = MediaRecorder\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/audio-recorder-polyfill/index.js\n// module id = 2\n// module chunks = 0","// Copied from https://github.com/chris-rudmin/Recorderjs\n\nmodule.exports = function () {\n  var BYTES_PER_SAMPLE = 2\n\n  var recorded = []\n\n  function encode (buffer) {\n    var length = buffer.length\n    var data = new Uint8Array(length * BYTES_PER_SAMPLE)\n    for (var i = 0; i < length; i++) {\n      var index = i * BYTES_PER_SAMPLE\n      var sample = buffer[i]\n      if (sample > 1) {\n        sample = 1\n      } else if (sample < -1) {\n        sample = -1\n      }\n      sample = sample * 32768\n      data[index] = sample\n      data[index + 1] = sample >> 8\n    }\n    recorded.push(data)\n  }\n\n  function dump (sampleRate) {\n    var bufferLength = recorded.length ? recorded[0].length : 0\n    var length = recorded.length * bufferLength\n    var wav = new Uint8Array(44 + length)\n    var view = new DataView(wav.buffer)\n\n    // RIFF identifier 'RIFF'\n    view.setUint32(0, 1380533830, false)\n    // file length minus RIFF identifier length and file description length\n    view.setUint32(4, 36 + length, true)\n    // RIFF type 'WAVE'\n    view.setUint32(8, 1463899717, false)\n    // format chunk identifier 'fmt '\n    view.setUint32(12, 1718449184, false)\n    // format chunk length\n    view.setUint32(16, 16, true)\n    // sample format (raw)\n    view.setUint16(20, 1, true)\n    // channel count\n    view.setUint16(22, 1, true)\n    // sample rate\n    view.setUint32(24, sampleRate, true)\n    // byte rate (sample rate * block align)\n    view.setUint32(28, sampleRate * BYTES_PER_SAMPLE, true)\n    // block align (channel count * bytes per sample)\n    view.setUint16(32, BYTES_PER_SAMPLE, true)\n    // bits per sample\n    view.setUint16(34, 8 * BYTES_PER_SAMPLE, true)\n    // data chunk identifier 'data'\n    view.setUint32(36, 1684108385, false)\n    // data chunk length\n    view.setUint32(40, length, true)\n\n    for (var i = 0; i < recorded.length; i++) {\n      wav.set(recorded[i], i * bufferLength + 44)\n    }\n\n    recorded = []\n    postMessage(wav.buffer, [wav.buffer])\n  }\n\n  onmessage = function (e) {\n    if (e.data[0] === 'encode') {\n      encode(e.data[1])\n    } else {\n      dump(e.data[1])\n    }\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/audio-recorder-polyfill/wave-encoder.js\n// module id = 3\n// module chunks = 0","// cool blog article on how to do this: http://www.smartjava.org/content/exploring-html5-web-audio-visualizing-sound\n// https://developer.mozilla.org/en-US/docs/Web/API/Web_Audio_API/Visualizations_with_Web_Audio_API\n\n// distortion curve for the waveshaper, thanks to Kevin Ennis\n// http://stackoverflow.com/questions/22312841/waveshaper-node-in-webaudio-how-to-emulate-distortion\n\nimport React, { Component }   from 'react'\nimport { string, number, bool, func } from 'prop-types';\nimport { MicrophoneRecorder } from '../libs/MicrophoneRecorder';\nimport AudioContext           from '../libs/AudioContext';\nimport AudioPlayer            from '../libs/AudioPlayer';\nimport Visualizer             from '../libs/Visualizer';\n\n\nexport default class ReactMic extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      microphoneRecorder  : null,\n      canvas              : null,\n      canvasCtx           : null\n    }\n  }\n\n  componentDidMount() {\n    const {\n      onSave,\n      onStop,\n      onStart,\n      onData,\n      audioElem,\n      audioBitsPerSecond,\n      mimeType\n    } = this.props;\n    const { visualizer } = this.refs;\n    const canvas = visualizer;\n    const canvasCtx = canvas.getContext(\"2d\");\n    const options = {\n      audioBitsPerSecond : audioBitsPerSecond,\n      mimeType           : mimeType\n    }\n\n    if(audioElem) {\n      AudioPlayer.create(audioElem);\n\n      this.setState({\n        canvas: canvas,\n        canvasCtx: canvasCtx\n      }, () => {\n        this.visualize();\n      });\n    } else {\n\n      this.setState({\n        microphoneRecorder: new MicrophoneRecorder(\n                              onStart,\n                              onStop,\n                              onSave,\n                              onData,\n                              options\n                            ),\n        canvas: canvas,\n        canvasCtx: canvasCtx\n      }, () => {\n        this.visualize();\n      });\n    }\n\n  }\n\n  visualize = () => {\n    const self = this;\n    const { backgroundColor, strokeColor, width, height, visualSetting } = this.props;\n    const { canvas, canvasCtx } = this.state;\n\n    if(visualSetting === 'sinewave') {\n      Visualizer.visualizeSineWave(canvasCtx, canvas, width, height, backgroundColor, strokeColor);\n    } else if(visualSetting === 'frequencyBars') {\n      Visualizer.visualizeFrequencyBars(canvasCtx, canvas, width, height, backgroundColor, strokeColor);\n    } else if(visualSetting === 'frequencyCircles') {\n      Visualizer.visualizeFrequencyCircles(canvasCtx, canvas, width, height, backgroundColor, strokeColor);\n    }\n\n  }\n\n  clear() {\n    const { width, height } = this.props;\n    const { canvasCtx  } = this.state;\n    canvasCtx.clearRect(0, 0, width, height);\n  }\n\n  render() {\n    const { record, onStop, width, height } = this.props;\n    const { microphoneRecorder, canvasCtx } = this.state;\n\n    if(record) {\n      if(microphoneRecorder) {\n        microphoneRecorder.startRecording();\n\n      }\n    } else {\n      if (microphoneRecorder) {\n        microphoneRecorder.stopRecording(onStop);\n        this.clear();\n      }\n    }\n\n    return (<canvas ref=\"visualizer\" height={height} width={width} className={this.props.className}></canvas>);\n  }\n}\n\nReactMic.propTypes = {\n  backgroundColor : string,\n  strokeColor     : string,\n  className       : string,\n  audioBitsPerSecond: number,\n  mimeType        : string,\n  height          : number,\n  record          : bool.isRequired,\n  onStop          : func,\n  onData          : func\n};\n\nReactMic.defaultProps = {\n  backgroundColor   : 'rgba(255, 255, 255, 0.5)',\n  strokeColor       : '#000000',\n  className         : 'visualizer',\n  audioBitsPerSecond: 128000,\n  mimeType          : 'audio/wav',\n  record            : false,\n  width             : 640,\n  height            : 100,\n  visualSetting     : 'sinewave'\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/ReactMic.js","import AudioContext from './AudioContext';\n\nlet audioSource;\n\nconst AudioPlayer =  {\n\n  create(audioElem) {\n    const audioCtx = AudioContext.getAudioContext();\n    const analyser = AudioContext.getAnalyser();\n\n    if(audioSource === undefined){\n      const source = audioCtx.createMediaElementSource(audioElem);\n      source.connect(analyser);\n      audioSource = source;\n    }\n\n    analyser.connect(audioCtx.destination);\n  }\n\n}\n\nexport default AudioPlayer;\n\n\n// WEBPACK FOOTER //\n// ./src/libs/AudioPlayer.js","import AudioContext from './AudioContext';\n\nlet analyser;\nlet audioCtx;\nlet mediaRecorder;\nlet safariMediaRecorder = require('audio-recorder-polyfill');\nlet chunks = [];\nlet startTime;\nlet stream;\nlet mediaOptions;\nlet blobObject;\nlet onStartCallback;\nlet onStopCallback;\nlet onSaveCallback;\nlet onDataCallback;\n\nconst constraints = { audio: true, video: false }; // constraints - only audio needed\n\nnavigator.getUserMedia = (navigator.getUserMedia ||\n                          navigator.webkitGetUserMedia ||\n                          navigator.mozGetUserMedia ||\n                          navigator.msGetUserMedia);\n\nexport class MicrophoneRecorder {\n  constructor(onStart, onStop, onSave, onData, options) {\n    onStartCallback= onStart;\n    onStopCallback= onStop;\n    onSaveCallback = onSave;\n    onDataCallback = onData;\n    mediaOptions= options;\n  }\n\n  startRecording=() => {\n\n    startTime = Date.now();\n\n    if(mediaRecorder) {\n\n      if(audioCtx && audioCtx.state === 'suspended') {\n        audioCtx.resume();\n      }\n\n      if(mediaRecorder && mediaRecorder.state === 'paused') {\n        mediaRecorder.resume();\n        return;\n      }\n\n      if(audioCtx && mediaRecorder && mediaRecorder.state === 'inactive') {\n        mediaRecorder.start(10);\n        const source = audioCtx.createMediaStreamSource(stream);\n        source.connect(analyser);\n        if(onStartCallback) { onStartCallback() };\n      }\n    } else {\n      if (navigator.mediaDevices) {\n        console.log('getUserMedia supported.');\n\n        navigator.mediaDevices.getUserMedia(constraints)\n          .then((str) => {\n            stream = str;\n\n            console.log('Passed mediaOptions.mimeType: ' + mediaOptions.mimeType);\n\n            if(!!window.MediaRecorder && window.MediaRecorder.isTypeSupported(mediaOptions.mimeType)) {\n              console.log('Creating Standard MediaRecorder with Passed MediaOptions from Component Props')\n              mediaRecorder = new window.MediaRecorder(str, mediaOptions);\n              mediaRecorder.ondataavailable = (event) => {\n                chunks.push(event.data);\n                if(onDataCallback) {\n                  onDataCallback(event.data);\n                }\n              }\n              mediaRecorder.onstop = this.onStop;\n\n            } else if (!!window.MediaRecorder) {\n              console.log('Creating Standard MediaRecorder, No Passed MediaOptions')\n              mediaRecorder = new window.MediaRecorder(str);\n              mediaRecorder.ondataavailable = (event) => {\n                chunks.push(event.data);\n                if(onDataCallback) {\n                  onDataCallback(event.data);\n                }\n              }\n              mediaRecorder.onstop = this.onStop;\n\n            } else {\n              console.log('Creating Polyfill MediaRecorder for Safari, No Passed MediaOptions')\n              mediaRecorder = new safariMediaRecorder(str);\n              mediaRecorder.addEventListener('dataavailable', (event) => {\n                chunks.push(event.data);\n                if(onDataCallback) {\n                  onDataCallback(event.data);\n                }\n              })\n\n              mediaRecorder.addEventListener('stop', (event) => {\n                this.onStop(event);\n              })\n\n            }\n\n            if(onStartCallback) { onStartCallback() };\n\n            audioCtx = AudioContext.getAudioContext();\n            audioCtx.resume().then(() => {\n\n              analyser = AudioContext.getAnalyser();\n              mediaRecorder.start(10);\n              const sourceNode = audioCtx.createMediaStreamSource(stream);\n              sourceNode.connect(analyser);\n            });\n\n          });\n\n      } else {\n        alert('Your browser does not support audio recording');\n      }\n    }\n\n  }\n\n  stopRecording() {\n    if(mediaRecorder && mediaRecorder.state !== 'inactive') {\n      mediaRecorder.stop();\n\n      stream.getAudioTracks().forEach((track) => {\n        track.stop()\n      })\n      mediaRecorder = null\n      AudioContext.resetAnalyser();\n    }\n  }\n\n  onStop(evt) {\n    console.log(chunks);\n    const blob = new Blob(chunks, { 'type' : mediaOptions.mimeType });\n    chunks = [];\n\n    const blobObject =  {\n      blob      : blob,\n      startTime : startTime,\n      stopTime  : Date.now(),\n      options   : mediaOptions,\n      blobURL   : window.URL.createObjectURL(blob)\n    }\n\n    window.open(blobObject.blobURL, '_self');\n\n    if(onStopCallback) { onStopCallback(blobObject) };\n    if(onSaveCallback) { onSaveCallback(blobObject) };\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/libs/MicrophoneRecorder.js","import AudioContext from './AudioContext';\n\n\nlet drawVisual;\n\nconst Visualizer = {\n\n  visualizeSineWave(canvasCtx, canvas, width, height, backgroundColor, strokeColor) {\n    let analyser = AudioContext.getAnalyser();\n\n    const bufferLength = analyser.fftSize;\n    const dataArray = new Uint8Array(bufferLength);\n\n    canvasCtx.clearRect(0, 0, width, height);\n\n    function draw() {\n\n      drawVisual = requestAnimationFrame(draw);\n\n      analyser = AudioContext.getAnalyser();\n\n      analyser.getByteTimeDomainData(dataArray);\n\n      canvasCtx.fillStyle = backgroundColor;\n      canvasCtx.fillRect(0, 0, width, height);\n\n      canvasCtx.lineWidth = 2;\n      canvasCtx.strokeStyle = strokeColor;\n\n      canvasCtx.beginPath();\n\n      const sliceWidth = width * 1.0 / bufferLength;\n      let x = 0;\n\n      for(let i = 0; i < bufferLength; i++) {\n        const v = dataArray[i] / 128.0;\n        const y = v * height/2;\n\n        if(i === 0) {\n          canvasCtx.moveTo(x, y);\n        } else {\n          canvasCtx.lineTo(x, y);\n        }\n\n        x += sliceWidth;\n      }\n\n      canvasCtx.lineTo(canvas.width, canvas.height/2);\n      canvasCtx.stroke();\n    };\n\n    draw();\n  },\n\n  visualizeFrequencyBars(canvasCtx, canvas, width, height, backgroundColor, strokeColor) {\n    const self = this;\n    let analyser = AudioContext.getAnalyser();\n    analyser.fftSize = 256;\n    const bufferLength = analyser.frequencyBinCount;\n    const dataArray = new Uint8Array(bufferLength);\n\n    canvasCtx.clearRect(0, 0, width, height);\n\n    function draw() {\n      drawVisual = requestAnimationFrame(draw);\n\n      analyser = AudioContext.getAnalyser();\n      analyser.getByteFrequencyData(dataArray);\n\n      canvasCtx.fillStyle = backgroundColor;\n      canvasCtx.fillRect(0, 0, width, height);\n\n      const barWidth = (width / bufferLength) * 2.5;\n      let barHeight;\n      let x = 0;\n\n      for(let i = 0; i < bufferLength; i++) {\n        barHeight = dataArray[i];\n\n        const rgb = self.hexToRgb(strokeColor);\n\n        // canvasCtx.fillStyle = `rgb(${barHeight+100},${rgb.g},${rgb.b})`;\n        canvasCtx.fillStyle = strokeColor;\n        canvasCtx.fillRect(x,height-barHeight/2,barWidth,barHeight/2);\n\n        x += barWidth + 1;\n      }\n    };\n\n    draw();\n  },\n\n  visualizeFrequencyCircles(canvasCtx, canvas, width, height, backgroundColor, strokeColor) {\n    const self = this;\n    let analyser = AudioContext.getAnalyser();\n    analyser.fftSize = 32;\n    const bufferLength = analyser.frequencyBinCount;\n\n    const dataArray = new Uint8Array(bufferLength);\n    canvasCtx.clearRect(0, 0, width, height);\n\n    function draw() {\n\n      drawVisual = requestAnimationFrame(draw);\n      analyser = AudioContext.getAnalyser();\n      analyser.getByteFrequencyData(dataArray);\n      const reductionAmount = 3;\n      const reducedDataArray = new Uint8Array(bufferLength / reductionAmount);\n\n      for (let i = 0; i < bufferLength; i += reductionAmount) {\n        let sum = 0;\n        for (let j = 0; j < reductionAmount; j++) {\n          sum += dataArray[i + j];\n        }\n         reducedDataArray[i/reductionAmount] = sum / reductionAmount;\n      }\n\n      canvasCtx.clearRect(0, 0, width, height);\n      canvasCtx.beginPath();\n      canvasCtx.arc(width / 2, height / 2, Math.min(height, width) / 2, 0, 2 * Math.PI);\n      canvasCtx.fillStyle = backgroundColor;\n      canvasCtx.fill();\n      const stepSize = (Math.min(height, width) / 2.0) / (reducedDataArray.length);\n      canvasCtx.strokeStyle = strokeColor;\n\n      for (let i = 0; i < reducedDataArray.length; i++) {\n        canvasCtx.beginPath();\n        const normalized = reducedDataArray[i] / 128;\n        const r = (stepSize * i) + (stepSize * normalized);\n        canvasCtx.arc(width / 2, height / 2, r, 0, 2 * Math.PI);\n        canvasCtx.stroke();\n      }\n    };\n    draw();\n  },\n\n\n  hexToRgb(hex) {\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? {\n        r: parseInt(result[1], 16),\n        g: parseInt(result[2], 16),\n        b: parseInt(result[3], 16)\n    } : null;\n  }\n\n}\n\nexport default Visualizer;\n\n\n\n// WEBPACK FOOTER //\n// ./src/libs/Visualizer.js","\"use strict\";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nfunction makeEmptyFunction(arg) {\n  return function () {\n    return arg;\n  };\n}\n\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\nvar emptyFunction = function emptyFunction() {};\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\nemptyFunction.thatReturnsThis = function () {\n  return this;\n};\nemptyFunction.thatReturnsArgument = function (arg) {\n  return arg;\n};\n\nmodule.exports = emptyFunction;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fbjs/lib/emptyFunction.js\n// module id = 8\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar validateFormat = function validateFormat(format) {};\n\nif (process.env.NODE_ENV !== 'production') {\n  validateFormat = function validateFormat(format) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  };\n}\n\nfunction invariant(condition, format, a, b, c, d, e, f) {\n  validateFormat(format);\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n}\n\nmodule.exports = invariant;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fbjs/lib/invariant.js\n// module id = 9\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar invariant = require('fbjs/lib/invariant');\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    invariant(\n      false,\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim\n  };\n\n  ReactPropTypes.checkPropTypes = emptyFunction;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/prop-types/factoryWithThrowingShims.js\n// module id = 10\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&\n    Symbol.for &&\n    Symbol.for('react.element')) ||\n    0xeac7;\n\n  var isValidElement = function(object) {\n    return typeof object === 'object' &&\n      object !== null &&\n      object.$$typeof === REACT_ELEMENT_TYPE;\n  };\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(isValidElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/prop-types/index.js\n// module id = 11\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/prop-types/lib/ReactPropTypesSecret.js\n// module id = 12\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_13__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"}\n// module id = 13\n// module chunks = 0"],"sourceRoot":""}